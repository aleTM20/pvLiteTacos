/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas;

import alertas.principal.ErrorAlert;
import alertas.principal.SuccessAlert;
import alertas.principal.WarningAlertV;
import alertas.principal.WarningAlertV1;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import principal.PrincipalAdministrador;
import tabla.EstiloTablaHeader;
import tabla.EstiloTablaRenderer;
import tabla.MyScrollbarUI;
import static ventas.Ventas.conn;

/**
 *
 * @author Rojeru San
 */
public class VentasLista1 extends javax.swing.JInternalFrame {

    public static String id = "1";

    /**
     * Creates new form NewJInternalFrame
     */
    public VentasLista1() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.tabla.getTableHeader().setDefaultRenderer(new EstiloTablaHeader());
        this.tabla.setDefaultRenderer(Object.class, new EstiloTablaRenderer());
        this.tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getViewport().setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getVerticalScrollBar().setUI(new MyScrollbarUI());
        jScrollPane1.getHorizontalScrollBar().setUI(new MyScrollbarUI());

        this.tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (tabla.getSelectedRow() != -1) {
                    int fila = tabla.getSelectedRow();
                }
            }
        });
        llenarTabla("select * from ticket;");
    }
    public static void llenarTabla(String sql){
//        System.out.println(sql);
        DefaultTableModel modeloMesas   = (DefaultTableModel) tabla.getModel();
              while (modeloMesas.getRowCount() > 0) {
            modeloMesas.removeRow(0);
        }
           try {
//            System.out.println(sql);
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            Object datos[] = new Object[6];
            while (rs.next()) {
                    
                    datos[0]=rs.getInt("idTicket");
                    datos[1]=rs.getString("fecha");
                    datos[3]=rs.getString("vendedor");
                    datos[2]=rs.getFloat("total");
                    datos[4]=rs.getString("mesa");
                    if(rs.getString("status").equals("1")){
                        datos[5]="ACTIVO";
                    }else{
                        datos[5]="CANCELADO";
                    }
                
                      
                    modeloMesas.addRow(datos);
            } 
            } catch (SQLException ex) {
            System.out.println("tabla descripcion "+ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        ver = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        cancel = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cerrar = new principal.MaterialButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        lblTotal1 = new javax.swing.JLabel();
        buscar = new app.bolivia.swing.JCTextField();
        jLabel3 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel5 = new javax.swing.JLabel();

        ver.setText("DETALLES");
        ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verActionPerformed(evt);
            }
        });
        jPopupMenu1.add(ver);
        jPopupMenu1.add(jSeparator1);

        cancel.setText("CANCELAR");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPopupMenu1.add(cancel);

        setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        setBorder(dropShadowBorder1);
        setOpaque(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(58, 159, 171));

        cerrar.setBackground(new java.awt.Color(255, 255, 255));
        cerrar.setForeground(new java.awt.Color(58, 159, 171));
        cerrar.setText("X");
        cerrar.setToolTipText("<html> <head> <style> #contenedor{background:white;color:black; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Cerrar</h4> </body> </html>");
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.setFont(new java.awt.Font("Roboto Medium", 1, 20)); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ventas/caja.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VENTAS");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("VENTAS");

        dateChooserCombo2.setCurrentView(new datechooser.view.appearance.AppearancesList("Contrast",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo2.setCalendarBackground(new java.awt.Color(51, 255, 255));
    dateChooserCombo2.addCommitListener(new datechooser.events.CommitListener() {
        public void onCommit(datechooser.events.CommitEvent evt) {
            dateChooserCombo2OnCommit(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(jLabel10)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(293, 293, 293)
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 362, Short.MAX_VALUE)
                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE))
    );

    jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1047, 80));

    jPanel7.setBackground(new java.awt.Color(58, 159, 171));

    tabla.setBackground(new java.awt.Color(204, 204, 204));
    tabla.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    tabla.setForeground(new java.awt.Color(255, 255, 255));
    tabla.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "No.TICKET", "FECHA", "VENDEDOR", "$ TOTAL","MESA","STATUS"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    tabla.setComponentPopupMenu(jPopupMenu1);
    tabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    tabla.setDoubleBuffered(true);
    tabla.setRowHeight(20);
    tabla.setSelectionBackground(new java.awt.Color(0, 153, 255));
    tabla.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(tabla);

    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 255, 255));
    jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel6.setText("TOTAL ENTRADAS: $");

    lblTotal1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    lblTotal1.setForeground(new java.awt.Color(255, 255, 255));
    lblTotal1.setText("0.0");

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1007, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
    );

    jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

    buscar.setBorder(null);
    buscar.setForeground(new java.awt.Color(58, 159, 171));
    buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    buscar.setPlaceholder("BUSCAR");
    buscar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            buscarKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            buscarKeyTyped(evt);
        }
    });
    jPanel1.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 140, 30));

    jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/productos/campo-buscar.png"))); // NOI18N
    jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 210, -1));

    dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Contrast",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
dateChooserCombo1.setCalendarBackground(new java.awt.Color(51, 255, 255));
dateChooserCombo1.addCommitListener(new datechooser.events.CommitListener() {
    public void onCommit(datechooser.events.CommitEvent evt) {
        dateChooserCombo1OnCommit(evt);
    }
    });
    jPanel1.add(dateChooserCombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 90, 190, 40));

    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(58, 159, 171));
    jLabel5.setText("Buscar por fecha:");
    jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 190, 40));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cerrarActionPerformed

    private void verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verActionPerformed
int fila=tabla.getSelectedRow();
if(fila>-1){
    int codigo=(int) tabla.getValueAt(fila,0);
    DetallesTicket detalles=new DetallesTicket(new JFrame(),true,codigo);
    detalles.setVisible(true);
}else{
     ErrorAlert wa = new ErrorAlert(new JFrame(), true);
        wa.titulo.setText("Opssss....");
        wa.msj.setText("SELECCIONA UNA FILA");
        wa.msj1.setText("");
        wa.setVisible(true);
}
    }//GEN-LAST:event_verActionPerformed
 public String dar(String fecha)
    {
        String fe ="",nueF="";
        if(fecha.charAt(2)=='/')
        {
         fe  +=fecha.substring(6);
             String   fe2=fecha.substring(3, 5);
               String fe3=fecha.substring(0,2);
               nueF=fe3+"/"+fe2+"/20"+fe;
               return nueF;
        
    }  else{
        fe  +=fecha.substring(5);
             String   fe2=fecha.substring(2, 4);
               String fe3=fecha.substring(0,1);
                nueF="0"+fe3+"/"+fe2+"/20"+fe;
                return nueF;
        
                       }
       }
    private void dateChooserCombo1OnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChooserCombo1OnCommit
llenarTabla("SELECT * FROM `ticket` where fecha = '"+dar(dateChooserCombo1.getText())+"'  ORDER by idTicket ASC");
    }//GEN-LAST:event_dateChooserCombo1OnCommit

    private void buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyTyped
        char letras = evt.getKeyChar();

        if (Character.isLowerCase(letras)) {
            String cad = ("" + letras).toUpperCase();
            letras = cad.charAt(0);
            evt.setKeyChar(letras);
        }
    }//GEN-LAST:event_buscarKeyTyped

    private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
String dato=buscar.getText();
        llenarTabla("SELECT * FROM `ticket` where vendedor like '%"+dato+"%' or idTicket like '%"+dato+"%' or mesa like '%"+dato+"%'  ORDER by idTicket ASC ");
    }//GEN-LAST:event_buscarKeyReleased

    private void dateChooserCombo2OnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChooserCombo2OnCommit
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserCombo2OnCommit

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
int fila=tabla.getSelectedRow();
if(fila>-1){
    int codigo=(int) tabla.getValueAt(fila,0);
   if(isCancel(codigo)){
cancelarTicket(codigo);
llenarTabla("select * from ticket;");
}else{
    ErrorAlert wa = new ErrorAlert(new JFrame(), true);
        wa.titulo.setText("Opssss....");
        wa.msj.setText("Ticket ya cancelado");
        wa.msj1.setText("");
        wa.setVisible(true);
   }
}else{
     ErrorAlert wa = new ErrorAlert(new JFrame(), true);
        wa.titulo.setText("Opssss....");
        wa.msj.setText("SELECCIONA UNA FILA");
        wa.msj1.setText("");
        wa.setVisible(true);
}
      
    }//GEN-LAST:event_cancelActionPerformed
public void cancelarTicket(int idTicket){
    try {
            String sql = "select DISTINCT(producto.idproducto)as id,tipoproducto,cantidad from ticket INNER JOIN ventas on ventas.idTicket="
                    + "ticket.idTicket INNER JOIN producto on producto.idproducto"
                    + "=ventas.id_Producto where ticket.idTicket="+idTicket+";";
//            System.out.println(sql);
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            while (rs.next()) {
                    
                  String idProducto= rs.getString("id");
                  String tipo= rs.getString("tipoproducto");
                  int cantidad= rs.getInt("cantidad");
                   if(tipo.equals("COMIDA")){
                       sumarInsumo(Integer.parseInt(idProducto), cantidad);
                   }else{
                   sumarInventario(Integer.parseInt(idProducto), cantidad);
                   }
               
            } 
            updateTicket(idTicket);
            } catch (SQLException ex) {
            System.out.println("tabla descripcion "+ex.getMessage());
        }
}
public void  updateTicket(int codigo){
 try{
    String sql = "update ticket set status = 2 where idTicket ="+codigo+";";
//             System.out.println(sql);
     PreparedStatement pst = conn.prepareStatement(sql);
               // System.out.println(FECHAS.darHora());
            pst.executeUpdate();

        } catch (SQLException ex) {
            System.out.println("sumar inventario "+ex.getMessage());
        }
}
    public void sumarInsumo(int codigo,int cantidad){
 String sql="select * from producto  where idProducto="+codigo+";";
           
        try {
                      
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
           while (rs.next()) {
               
              int idInsumo=rs.getInt("idInsumo");
              float cantidadReceta=rs.getFloat("cantidadInsumo");
              float enExistencia=cantidadInsumo(idInsumo);
              float necesario=cantidadReceta*cantidad;
              float devolver=necesario+enExistencia;
              sumarInsumo(idInsumo,devolver);
              }
       
        } catch (SQLException ex) {
       
        }
}
public void sumarInsumo(int idInsumo,float suma){
 try{
    String sql = "update insumos set existencias = "+suma+" where idInsumo ="+idInsumo+";";
//             System.out.println(sql);
     PreparedStatement pst = conn.prepareStatement(sql);
               // System.out.println(FECHAS.darHora());
            pst.executeUpdate();

        } catch (SQLException ex) {
            System.out.println("sumar inventario "+ex.getMessage());
        }
}
public float cantidadInsumo(int codigo){
       try {
            String sql = "select existencias as cantidad from insumos where idInsumo = "+codigo+";";
//            System.out.println(sql);
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            if (rs.next()) {
              return rs.getFloat("cantidad");
            } 
            } catch (SQLException ex) {
            System.out.println("ver uni "+ex.getMessage());
        }
return -1;
} 
   public boolean isCancel(int id){
 String sql="select status from ticket  where idTicket="+id+";";
           
        try {
                      
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
          //  System.out.println("llego 1");
             if(rs.next()){
                if(rs.getString("status").equals("1")){
                return true;
                }
         }  
       
        } catch (SQLException ex) {
       
        }
        return false;
}
   public int enInventario(int codigo){
          try {
            String sql = "select cantidad from inventario where idProducto = "+codigo+";";
//            System.out.println(sql);
  PreparedStatement pst=conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery(sql);
            if (rs.next()) {
              return rs.getInt("cantidad");
            } 
            } catch (SQLException ex) {
            System.out.println("ver uni "+ex.getMessage());
        }
return -1;
   }
   public void sumarInventario(int codigo,int cantidad){
   int enInventario=enInventario(codigo);
   int devolver=cantidad+enInventario;
       actualizarInventario(codigo, devolver);
   }
public void actualizarInventario(int codigo,int cantidad){
 try{
    String sql = "update inventario set cantidad = "+cantidad+" where idProducto="+codigo+";";
//             System.out.println(sql);
     PreparedStatement pst = conn.prepareStatement(sql);
               // System.out.println(FECHAS.darHora());
            pst.executeUpdate();

        } catch (SQLException ex) {
            System.out.println("sumar inventario "+ex.getMessage());
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private app.bolivia.swing.JCTextField buscar;
    private javax.swing.JMenuItem cancel;
    private principal.MaterialButton cerrar;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    public static javax.swing.JLabel lblTotal1;
    public static javax.swing.JTable tabla;
    private javax.swing.JMenuItem ver;
    // End of variables declaration//GEN-END:variables
 public static String fechaactual() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatofecha.format(fecha);
    }
}
