/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package producto;

import alertas.principal.AWTUtilities;
import alertas.principal.ErrorAlert;
import alertas.principal.SuccessAlert;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import tabla.EstiloTablaHeader;
import tabla.EstiloTablaRenderer;
import tabla.MyScrollbarUI;

/**
 *
 * @author Rojeru San
 */
public class ModalIngredientesProducto extends javax.swing.JDialog {

    Timer timer = null;
    TimerTask task;
    int i = 32;
    Opciones op = new Opciones();
    public static ArrayList<Integer> idInsumo = new ArrayList();
    Sentencias producto;

    /**
     * Creates new form ModalProducto
     */
    public ModalIngredientesProducto(java.awt.Frame parent, boolean modal, Sentencias producto) {
        super(parent, modal);
        initComponents();

        this.producto = producto;

        AWTUtilities.setOpaque(this, false);
        Ubicar(0);
        inicializar();
        nombre.setText(producto.getNombre() + "--" + producto.getDescripcion());

    }

    public void inicializar() {
        llenarComboBox();
        TableColumn columna2 = this.tabla.getColumn("idInsumo");
        columna2.setResizable(false);
        columna2.setPreferredWidth(20);
        TableColumn columna = this.tabla.getColumn("Insumo");
        columna.setResizable(false);
        columna.setPreferredWidth(100);
        TableColumn columnaP = this.tabla.getColumn("Cantidad");
        columnaP.setResizable(false);
        columnaP.setPreferredWidth(30);

        this.tabla.getTableHeader().setDefaultRenderer(new EstiloTablaHeader());
        this.tabla.setDefaultRenderer(Object.class, new EstiloTablaRenderer());
        this.tabla.setSelectionMode(0);
        this.jScrollPane1.getViewport().setBackground(new Color(255, 255, 255));
        this.jScrollPane1.getViewport().setBackground(new Color(255, 255, 255));
        this.jScrollPane1.getVerticalScrollBar().setUI(new MyScrollbarUI());
        this.jScrollPane1.getHorizontalScrollBar().setUI(new MyScrollbarUI());
    }

    private void llenarComboBox() {
        this.op.obtenerInsumos();
        System.out.println("tama√±o: "+ idInsumo.size());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        jPanel2 = new javax.swing.JPanel();
        cerrar = new principal.MaterialButton();
        titulo1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        tipo = new componentes.org1.bolivia.combo.SComboBox();
        jLabel1 = new javax.swing.JLabel();
        Text_insumo2 = new app.bolivia.swing.JCTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        nombre = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        registrar = new principal.MaterialButton();
        terminar = new principal.MaterialButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alertas/img/fondo.png"))); // NOI18N
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(58, 159, 171));

        cerrar.setBackground(new java.awt.Color(255, 255, 255));
        cerrar.setForeground(new java.awt.Color(58, 159, 171));
        cerrar.setText("X");
        cerrar.setToolTipText("<html> <head> <style> #contenedor{background:white;color:black; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Cerrar</h4> </body> </html>");
        cerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cerrar.setFont(new java.awt.Font("Roboto Medium", 1, 20)); // NOI18N
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });

        titulo1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titulo1.setForeground(new java.awt.Color(255, 255, 255));
        titulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo1.setText("INSUMO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(404, Short.MAX_VALUE)
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(69, Short.MAX_VALUE)
                    .addComponent(titulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(titulo1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        panel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 10, 458, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        jPanel4.setBorder(dropShadowBorder1);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titulo.setForeground(new java.awt.Color(58, 159, 171));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Ingrese la cantidad en KG, PZA o LTS");
        jPanel4.add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 400, 31));

        tipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });
        jPanel4.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 240, 30));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(58, 159, 171));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INSUMO:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 240, -1));

        Text_insumo2.setBackground(new java.awt.Color(255, 255, 255));
        Text_insumo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(58, 159, 171)));
        Text_insumo2.setForeground(new java.awt.Color(58, 159, 171));
        Text_insumo2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Text_insumo2.setText("1");
        Text_insumo2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Text_insumo2.setPlaceholder("Cantidad");
        Text_insumo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Text_insumo2KeyTyped(evt);
            }
        });
        jPanel4.add(Text_insumo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 110, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(58, 159, 171));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CANTIDAD:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 330, 110, -1));

        tabla.setModel(new DefaultTableModel(new Object[0][], new String[] { "idInsumo", "Cantidad", "Insumo" })
            {
                boolean[] canEdit = { false, false, false };

                public boolean isCellEditable(int rowIndex, int columnIndex)
                {
                    return this.canEdit[columnIndex];
                }
            });
            tabla.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tablaMouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(tabla);

            jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 400, 250));

            nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            nombre.setForeground(new java.awt.Color(58, 159, 171));
            nombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jPanel4.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 31));

            panel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 420, 410));

            jPanel3.setBackground(new java.awt.Color(58, 159, 171));
            jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            registrar.setBackground(new java.awt.Color(255, 255, 255));
            registrar.setForeground(new java.awt.Color(58, 159, 171));
            registrar.setText("AGREGAR");
            registrar.setToolTipText("<html> <head> <style> #contenedor{background:#3A9FAB;color:white; padding-left:10px;padding-right:10px;margin:0; padding-top:5px;padding-bottom:5px;} </style> </head> <body> <h4 id=\"contenedor\">Limpiar campos</h4> </body> </html>");
            registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            registrar.setFont(new java.awt.Font("Roboto Medium", 1, 14)); // NOI18N
            registrar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    registrarActionPerformed(evt);
                }
            });
            jPanel3.add(registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 160, 50));

            terminar.setBackground(new java.awt.Color(255, 255, 255));
            terminar.setForeground(new java.awt.Color(58, 159, 171));
            terminar.setText("TERMINAR");
            terminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            terminar.setFont(new java.awt.Font("Roboto Medium", 1, 14)); // NOI18N
            terminar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    terminarActionPerformed(evt);
                }
            });
            terminar.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyTyped(java.awt.event.KeyEvent evt) {
                    terminarKeyTyped(evt);
                }
            });
            jPanel3.add(terminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 170, 50));

            panel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 340, 459, 200));

            getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 476, 550));

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        this.task = new TimerTask() {
            public void run() {
                if (ModalIngredientesProducto.this.i == 0) {
                    ModalIngredientesProducto.this.Cerrar();
                } else {
                    ModalIngredientesProducto.this.Ubicar(ModalIngredientesProducto.this.i);
                    ModalIngredientesProducto.this.i -= 32;
                    ModalIngredientesProducto.this.Trasparencia(ModalIngredientesProducto.this.i / 352.0F);
                }
            }
        };
        this.timer = new Timer();
        this.timer.schedule(this.task, 0L, 2L);
        ErrorAlert er = new ErrorAlert(new JFrame(), true);
        ErrorAlert.titulo.setText("OOPS...");
        ErrorAlert.msj.setText("NO CONTIENE INSUMOS");
        ErrorAlert.msj1.setText("EL PRODUCTO NO SE REGISTRARA");
        er.setVisible(true);
    }//GEN-LAST:event_cerrarActionPerformed

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        int index = tipo.getSelectedIndex();
        System.out.println("id: " + idInsumo.get(index) + " insumo: " + tipo.getItemAt(index));
        if ((index != 0) || (!this.Text_insumo2.getText().equals(""))) {
            Object[] datos = new Object[3];
            String ingrediente = (String) tipo.getItemAt(index);
            float cantidad = Float.parseFloat(this.Text_insumo2.getText());

            datos[0] = idInsumo.get(index);
            datos[1] = Float.valueOf(cantidad);
            datos[2] = ingrediente;
            DefaultTableModel modelo = (DefaultTableModel) this.tabla.getModel();
            modelo.addRow(datos);
            tipo.setSelectedIndex(0);
            this.Text_insumo2.setText("");
        } else {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            ErrorAlert.titulo.setText("OOPS...");
            ErrorAlert.msj.setText("DEBE DE SELECCIONAR UN INSUMO ");
            ErrorAlert.msj1.setText("E INGRESAR LA CANTIDAD");
            er.setVisible(true);
        }
    }//GEN-LAST:event_registrarActionPerformed

    private void terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarActionPerformed
        if (this.tabla.getRowCount() > 0) {
            Opciones.registrar(this.producto);

            for (int j = 0; j < this.tabla.getRowCount(); j++) {
                this.op.insertarReceta(this.producto.getidProducto(), ((Integer) this.tabla.getValueAt(j, 0)).intValue(), ((Float) this.tabla.getValueAt(j, 1)).floatValue());
            }
            this.task = new TimerTask() {
                public void run() {
                    if (ModalIngredientesProducto.this.i == 0) {
                        ModalIngredientesProducto.this.Cerrar();
                    } else {
                        ModalIngredientesProducto.this.Ubicar(ModalIngredientesProducto.this.i);
                        ModalIngredientesProducto.this.i -= 32;
                        ModalIngredientesProducto.this.Trasparencia(ModalIngredientesProducto.this.i / 352.0F);
                    }
                }
            };
            this.timer = new Timer();
            this.timer.schedule(this.task, 0L, 2L);
        } else {
            ErrorAlert er = new ErrorAlert(new JFrame(), true);
            ErrorAlert.titulo.setText("OOPS...");
            ErrorAlert.msj.setText("DEBE DE CONTENER UN ");
            ErrorAlert.msj1.setText("INSUMO COMO MINIMO");
            er.setVisible(true);
        }
    }//GEN-LAST:event_terminarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        task = new TimerTask() {
            @Override
            public void run() {
                if (i == 352) {
                    timer.cancel();
                } else {
                    Ubicar(i);
                    i += 32;
                    Trasparencia((float) i / 352);
                }
            }
        };
        timer = new Timer();
        timer.schedule(task, 0, 2);
    }//GEN-LAST:event_formWindowOpened

    private void terminarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_terminarKeyTyped
//        if ((evt.getKeyChar() == KeyEvent.VK_ENTER)) {
//            if (this.nombre.getText().equals("") || this.descripcion.getText().equals("")
//                    || this.tipo.getSelectedIndex() == 0 || this.precio.getText().equals("")) {
//
//                ErrorAlert er = new ErrorAlert(new JFrame(), true);
//                er.titulo.setText("OOPS...");
//                er.msj.setText("FALTAN CAMPOS DE LLENAR");
//                er.msj1.setText("");
//                er.setVisible(true);
//
//            } else {
//
//                if (this.registrar.getText().equals("GUARDAR")) {
//
//                    producto.Sentencias s = new Sentencias();
//
//                    s.setNombre(this.nombre.getText());
//                    s.setDescripcion(this.descripcion.getText());
//                    s.setTipo(this.tipo.getSelectedItem().toString());
//                    s.setPrecio(Double.parseDouble(this.precio.getText()));
//                    s.setId(Integer.parseInt(this.id.getText()));
//
//                    int validaStock = 0;
//                    if (!this.stock.getText().equals("")) {
//                        validaStock = Integer.parseInt(this.stock.getText());
//                        s.setStock(String.valueOf(validaStock));
//                    } else {
//
////                if (this.tipo.getSelectedIndex() == 2) {
////                    s.setStock(String.valueOf(validaStock));
////                } else {
//                        s.setStock("");
////                }
//                    }
//
//                    int opcion = producto.Opciones.actualizar(s);
//                    if (opcion != 0) {
//                        String fila = this.id.getText();
//                        Opciones.listar("");
//                        Productos.seleccionaFila(fila);
//                        SuccessAlert sa = new SuccessAlert(new JFrame(), true);
//                        sa.titulo.setText("¬°HECHO!");
//                        sa.msj.setText("SE HAN GUARDADO LOS CAMBIOS");
//                        sa.msj1.setText("");
//                        sa.setVisible(true);
//                    }
//
//                } else {
//
//                    producto.Sentencias s = new Sentencias();
//
//                    s.setNombre(this.nombre.getText());
//                    s.setDescripcion(this.descripcion.getText());
//                    s.setTipo(this.tipo.getSelectedItem().toString());
//                    s.setPrecio(Double.parseDouble(this.precio.getText()));
//
//                    int validaStock = 0;
//                    if (!this.stock.getText().equals("")) {
//                        validaStock = Integer.parseInt(this.stock.getText());
//                    }
//
//                    if (this.tipo.getSelectedIndex() == 2) {
//                        s.setStock(String.valueOf(validaStock));
//                    } else {
//                        s.setStock("");
//                    }
//                    int opcion = producto.Opciones.registrar(s);
//                    if (opcion != 0) {
//                        String fila = String.valueOf(Opciones.extraerID());
//                        limpiarCampos();
//                        Productos.seleccionaFila(fila);
//                        SuccessAlert sa = new SuccessAlert(new JFrame(), true);
//                        sa.titulo.setText("¬°HECHO!");
//                        sa.msj.setText("SE HA REGISTRADO UN");
//                        sa.msj1.setText("NUEVO PRODUCTO");
//                        sa.setVisible(true);
//                    }
//                }
//            }
//        }
    }//GEN-LAST:event_terminarKeyTyped

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoActionPerformed

    private void Text_insumo2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Text_insumo2KeyTyped
        char num = evt.getKeyChar();
        String pre = this.Text_insumo2.getText();
        boolean hay = false;
        for (int i = 0; i < pre.length(); i++) {
            if (pre.charAt(i) == '.') {
                hay = true;
            }
        }
        if (((num < '0') || (num > '9')) && ((num != '.') || (hay))) {
            evt.consume();
        }
    }//GEN-LAST:event_Text_insumo2KeyTyped

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        if (evt.getClickCount() == 2) {
            int fila = this.tabla.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) this.tabla.getModel();
            modelo.removeRow(fila);
        }
    }//GEN-LAST:event_tablaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModalIngredientesProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModalIngredientesProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModalIngredientesProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModalIngredientesProducto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModalIngredientesProducto dialog = new ModalIngredientesProducto(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static app.bolivia.swing.JCTextField Text_insumo2;
    private principal.MaterialButton cerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel nombre;
    private org.edisoncor.gui.panel.Panel panel1;
    private principal.MaterialButton registrar;
    private javax.swing.JTable tabla;
    public static principal.MaterialButton terminar;
    public static componentes.org1.bolivia.combo.SComboBox tipo;
    public static javax.swing.JLabel titulo;
    public static javax.swing.JLabel titulo1;
    // End of variables declaration//GEN-END:variables

    private void Cerrar() {
        this.dispose();
        timer = null;
        task = null;
    }

    private void Trasparencia(float trasp) {
        AWTUtilities.setOpacity(this, trasp);
    }

    private void Ubicar(int y) {
        this.setLocation(603, y - 200);
    }
}
